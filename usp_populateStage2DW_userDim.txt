/****** Object:  StoredProcedure [etl].[usp_populateStage2DW_userDim]    Script Date: 1/30/2023 10:59:36 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [etl].[usp_populateStage2DW_userDim] AS
--=======================================================================================
--  Modification History
--  Author            Date          Comment
--
--  Carla Steinmetz   05/18/21      Initial Script
--  Carla Steinmetz   07/03/21      Add additional AAD related fields
--  Carla Steinmetz   07/11/21      Add a few more fields from updated user source
--  Carla Steinmetz   07/28/21      Streamlined for efficiency
--  Carla Steinmetz   07/30/21      Add lastDirSyncDateTime
--  Carla Steinmetz   01/10/22      Add dodUIC, dodAttachedUIC
--  Carla Steinmetz   01/12/22      Mark deleted users, update isDeletedYN to 0 or 1 manually, no longer coming in the data
--  Carla Steinmetz   02/07/22      Mark ServicePrincipal and ManagedIdentity as ACTIVE
--  Carla Steinmetz   02/21/22      Minor change to mark deleted users - added isDeletedYN = 0
--=======================================================================================
begin

	declare @v_Who [varchar](100);
	declare @v_When [datetime2];
	select @v_Who = SUSER_SNAME(), @v_When = SYSDATETIME();

	-- first - mark deleted users
	if (select count(*) from stage.userDim) > 0 

		update uD
			set uD.isDeletedYN = 1
				from userDim uD
				where uD.aadObjectType = 'AAD User' -- only users
					and uD.aadObjectId not in (select aadObjectId
						from stage.userDim)
					and uD.isDeletedYN = 0 -- select only not deleted users
					and uD.userKey >= 0;

	-- second - do any updates
	begin try

			update uD

				set uD.aadObjectId           = ssD.aadObjectId
			        , uD.aadObjectType       = ssD.aadObjectType
			        , uD.userEmail           = ssD.userEmail
					, uD.userName            = ssD.userName
					, uD.userPrincipalName   = ssD.userPrincipalName
										  
					, uD.givenName           = ssD.givenName
					, uD.surName             = ssD.surName
					, uD.rankName            = ssD.rankName
					, uD.jobTitleName        = ssD.jobTitleName
					, uD.dodUIC              = ssD.dodUIC
					, uD.dodAttachedUIC      = ssD.dodAttachedUIC
					, uD.unitName            = ssD.unitName
					, uD.organizationName    = ssD.organizationName
					, uD.companyName         = ssD.companyName
					, uD.departmentName      = ssD.departmentName
										  
					, uD.streetAddress       = ssD.streetAddress
					, uD.cityName            = ssD.cityName
					, uD.stateName           = ssD.stateName
					, uD.countryName         = ssD.countryName
					, uD.postalCode          = ssD.rankName
					, uD.locationName        = ssD.locationName
					, uD.nVoipNumber         = ssD.nVoipNumber
					, uD.sVoipNumber         = ssD.sVoipNumber
					, uD.businessNumber      = ssD.businessNumber
										  
					, uD.accountEnabledYN    = ssD.accountEnabledYN
					, uD.isDeletedYN         = 0

					, uD.createdDateTime     = ssD.createdDateTime
					, uD.lastDirSyncDateTime = ssD.lastDirSyncDateTime

					--, uD.whoCreated		 = ssD.whoCreated
					--, uD.whenCreated	     = ssD.whenCreated
					, uD.whoUpdated			 = @v_Who
					, uD.whenUpdated	     = @v_When
					--, uD.fromSource		 = ssD.fromSource
					--, uD.fromType		     = ssD.fromType
					, uD.[checkSum]          = ssD.[checkSum]

				from dbo.userDim uD

					inner join stage.userDim ssD
						on uD.aadObjectId = ssD.aadObjectId
--							and uD.isDeletedYN = 0
							and uD.userKey >= 0
							and uD.[checkSum] != ssD.[checkSum];

	end try

	begin catch
	    DECLARE @ErrorMessageA NVARCHAR(4000);
        DECLARE @ErrorSeverityA  INT;
        DECLARE @ErrorStateA INT;
        SELECT  @ErrorSeverityA = ISNULL(ERROR_SEVERITY(), 16), @ErrorStateA =  ERROR_STATE(), @ErrorMessageA =  ERROR_MESSAGE();
        RAISERROR('Error in (UPDATE) SP [usp_populateStage2DW_userDim]: %s', @ErrorSeverityA,@ErrorStateA, @ErrorMessageA);
	end catch


	-- third - add new ones
	begin try

		insert into dbo.userDim
				(aadObjectId, aadObjectType, userEmail, userName, userPrincipalName
				, givenName, surName, rankName, jobTitleName
				, dodUIC, dodAttachedUIC, unitName, organizationName, companyName, departmentName
				, streetAddress, cityName, stateName, countryName, postalCode, locationName
				, nVoipNumber, sVoipNumber, businessNumber
				, accountEnabledYN, isDeletedYN
				, createdDateTime, lastDirSyncDateTime
				, whoCreated, whenCreated --, whoUpdated, whenUpdated
				, fromSource, fromType, [checkSum])

			select   distinct
					  aadObjectId         = ssD.aadObjectId
			        , aadObjectType       = ssD.aadObjectType
			        , userEmail           = ssD.userEmail
					, userName            = ssD.userName
					, userPrincipalName   = ssD.userPrincipalName
										  
					, givenName           = ssD.givenName
					, surName             = ssD.surName
					, rankName            = ssD.rankName
					, jobTitleName        = ssD.jobTitleName
					, dodUIC              = ssD.dodUIC
					, dodAttachedUIC      = ssD.dodAttachedUIC
					, unitName            = ssD.unitName
					, organizationName    = ssD.organizationName
					, companyName         = ssD.companyName
					, departmentName      = ssD.departmentName
										  
					, streetAddress       = ssD.streetAddress
					, cityName            = ssD.cityName
					, stateName           = ssD.stateName
					, countryName         = ssD.countryName
					, postalCode          = ssD.rankName
					, locationName        = ssD.locationName
					, nVoipNumber         = ssD.nVoipNumber
					, sVoipNumber         = ssD.sVoipNumber
					, businessNumber      = ssD.businessNumber
										  
					, accountEnabledYN    = ssD.accountEnabledYN
					, isDeletedYN         = 0

					, createdDateTime     = ssD.createdDateTime
					, lastDirSyncDateTime = ssD.lastDirSyncDateTime

					, whoCreated	      = @v_Who
					, whenCreated	      = @v_When
					--, whoUpdated	      = ssD.whoUpdated
					--, whenUpdated	      = ssD.whenUpdated
					, fromSource	      = ssD.fromSource
					, fromType		      = ssD.fromType
					, [checkSum]          = ssD.[checkSum]

				from stage.userDim ssD

				where not exists (select 1
					from dbo.userDim sD
--					where sD.[checkSum] = ssD.[checkSum]
					where sD.aadObjectId = ssD.aadObjectId);

	end try

	begin catch
	    DECLARE @ErrorMessage NVARCHAR(4000);
        DECLARE @ErrorSeverity  INT;
        DECLARE @ErrorState INT;
        SELECT  @ErrorSeverity = ISNULL(ERROR_SEVERITY(), 16), @ErrorState =  ERROR_STATE(), @ErrorMessage =  ERROR_MESSAGE();
        RAISERROR('Error in (ADD) SP [usp_populateStage2DW_userDim]: %s', @ErrorSeverity,@ErrorState, @ErrorMessage);

	end catch

end;